If you don't want to implement a PID controller and prefer to use an existing ROS 2 function to set the drone's position directly, you can use the mavros_msgs::srv::SetMavFrame service to send a position setpoint to the drone.

Here's how you can modify your code to achieve this:

Create a method in your TemplateDroneControl class to set the desired position:




cpp
Copy code
void setDesiredPosition(double x, double y, double z)
{
    mavros_msgs::srv::SetMavFrame::Request request;
    request.x = x;
    request.y = y;
    request.z = z;

    auto result = local_pos_pub_->async_send_request(std::make_shared<mavros_msgs::srv::SetMavFrame::Request>(request));
    // Handle the result if necessary
}




Call the setDesiredPosition method with your desired coordinates in your constructor:




cpp
Copy code
// In the TemplateDroneControl constructor after taking off
setDesiredPosition(1.0, 2.0, 3.0); // Change the coordinates to your desired point





By using the mavros_msgs::srv::SetMavFrame service, you can set the desired position without implementing a PID controller. This service will internally handle the position control for you, so you don't need to worry about the control logic. Just provide the desired coordinates, and the drone will move to that point.
